service: messageboard

plugins:
  - serverless-python-requirements
  - serverless-wsgi
  - serverless-dynamodb-local

custom:
  usersTableName: 'users-table-${self:provider.stage}'
  messageboardsTableName: 'messageboards-table-${self:provider.stage}'
  messagesTableName: 'messages-table-${self:provider.stage}'
  wsgi:
    app: app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  dynamodb:
    stages:
      - dev
    start:
      migrate: true

app: message-board
org: marashen

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }
  environment:
    USERS_TABLE: ${self:custom.usersTableName}
    MESSAGEBOARDS_TABLE: ${self:custom.messageboardsTableName}
    MESSAGES_TABLE: ${self:custom.messageboardsTableName}

functions:
  app:
    handler: wsgi.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getUser:
    handler: wsgi.handler
    events:
      - http: 'GET /users/{user_id}'
        request:
          parameters:
            paths:
              user_id: true
  getAllUsers:
    handler: wsgi.handler
    events:
      - http: 'GET /users'
  createUser:
    handler: wsgi.handler
    events:
      - http: 'POST /users'
  getUserBoards:
    handler: wsgi.handler
    events:
      - http: 'GET /users/{user_id}/messageboards'
        request:
          parameters:
            paths:
              user_id: true

  getAllMessageboards:
    handler: wsgi.handler
    events:
      - http: 'GET /messageboards'
  createMessageboard:
    handler: wsgi.handler
    events:
      - http: 'POST /messageboards'

  getMessages:
    handler: wsgi.handler
    events:
      - http: 'GET /messageboards/{id}/messages'
        request:
          parameters:
            paths:
              id: true
  createMessage:
    handler: wsgi.handler
    events:
      - http: 'POST /messageboards/{id}/messages'
        request:
          parameters:
            paths:
              id: true

# you can add CloudFormation resource templates here
resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: userId
            AttributeType: S
        KeySchema:
          -
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.usersTableName}

    MessageboardsDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.messageboardsTableName}

    MessagesDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.messagesTableName}
